<template name="porkui" content="content">
<head>
	<link rel="stylesheet" type="text/css" href="css/html4.rcss" />
	<link rel="stylesheet" type="text/css" href="css/common.rcss" />
	<link rel="stylesheet" type="text/css" href="css/base.rcss" />
	<link rel="stylesheet" type="text/css" href="css/controls.rcss" />
	<link rel="stylesheet" type="text/css" href="/gfx/ui/css/ui_map.rcss" />
	<script src="as/base.as" />
	<script src="as/popup.as" />
	<script src="as/animations.as" />
	<script src="as/tutorial.as" />
	<script>

		void onTemplateLoad( Element @body, Event @ev )
		{

		}

		void onTemplateShow( Element @body, Event @ev )
		{
			ElementDocument @document = body.ownerDocument;


			/* make the background invisible if the engine says so */
			Element @background = body.getElementById( 'background-map' );
			if( @background != null ) {
				background.css( 'visibility', window.drawBackground ? 'visible' : 'hidden' );
			}
		}

		/* Enables notification popup and starts the alpha fade process */
		void notificationPopup( const String &in text, bool isError = false )
		{
			/* sets notification text and schedules timer updates */
			NotificationPopup( 'notification', text, 500, isError ? "error" : "ok" );
		}


		void openConsole( Element @self, Event @ev )
		{
			game.execAppend( 'toggleconsole\n' );
		}

		void animationsOnShow( bool noAnim = false, String contentBlock = "leftside" ) // called onShow of every element with animations
		{
			Element @body = @window.document.body;

			Element @content = @body.getElementById( contentBlock );
			if( @content == null ) {
				console.warn( 'animationsOnShow: missing content block "' + contentBlock + '"\n' );
				return;
			}

			if( noAnim ) {
				MoveAnimation anim( content, 0, ANIM_ORIGIN, ANIM_ORIGIN, EASE_OUT, null );
			}
			else {
				MoveAnimation anim( content, ANIMATION_DURATION_FAST, ANIM_LEFT, ANIM_ORIGIN, EASE_OUT, null );
			}
		}

		String menuloc;
		void animOpenMenu( String menu ) // This function automatically animates the content away and opens a new menu after that.
		{
			if( menu.length() <= 0 )
				return;				
				
			URL currentURL( window.document.URL );
			String currentDocFilename = currentURL.getFileName() + '.' + currentURL.getFileExtension();
			if( currentDocFilename == menu ) {
				// FIXME: not sure this works correct in all cases of valid input URL
				return;
			}

			menuloc = menu;
			
			Element @body = @window.document.body;
			Element @content = @body.getElementById( "leftside" );
			if( @content == null )
				return;

			MoveAnimation anim( content, ANIMATION_DURATION_FAST, ANIM_ORIGIN, ANIM_LEFT, EASE_IN, animOpenMenuCallback );
		}

		void animOpenMenuCallback()
		{
			window.location = menuloc;
		}

		void quitGame( Element @self, Event @ev )
		{
			game.execAppend( "quit\n" );
		}

		void openTutorialDialog( Element @self, Event @ev )
		{
			Element @body = @window.document.body;
			Element @game_link = body.getElementById( 'link_game' );
			if( @game_link != null ) {
				bool link_active = game_link.getAttr( 'current', '0' ).toInt() != 0;
				if( link_active ) {
					return;
				}
			}

			Tutorial::OpenModal1();

			window.location = 'game_join.rml';
		}
	</script>
</head>
<!-- ch : onshow and onhide dont work in template, you have to explicitly define them in each page using template :( -->
<body onload="$onTemplateLoad" onshow="$onTemplateShow">
	<!-- Few layout display divs -->
	<!-- YELLOW shows the location of header leaving 1 visible pixel below it -->
	<!--
	<div style="position:fixed; width:100%; height:69px; top:0px; left:0px; background:#ff0;" />
	-->
	
	<worldview id="background-map" class="ui-map" />

	<div id="background-overlay" />

	
	<!-- Main navigation bar -->
	
	<!-- Saved- dialog -->
	<div id="notification">
	</div>		

	<!-- Content -->
	<div id="content2">
	</div>


</body>
</template>
